name: Tests

on: [push, pull_request]

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        julia-version: [1.6 1.7]
        os: [ubuntu-latest]
    steps:
      - uses: actions/checkout@v1.0.0
      - uses: azure/login@v1.1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
      - uses: julia-actions/setup-julia@latest
        with:
          version: ${{ matrix.julia-version }}
      - name: Generate UUID
        id: uuid
        run: julia -e 'using Random; write(stdout,"::set-output name=uuid::"*lowercase(randstring(20)))'
        shell: bash
      - name: Run Az CLI script
        run: |
          az group create -l southcentralus -n "AzureBackupRG-cloudseis-${{ matrix.os }}-${{ matrix.julia-version }}-${{ github.run_id }}"
          az storage account create -n "c${{ steps.uuid.outputs.uuid }}a" -g "AzureBackupRG-cloudseis-${{ matrix.os }}-${{ matrix.julia-version }}-${{ github.run_id }}" -l southcentralus
          az storage account create -n "c${{ steps.uuid.outputs.uuid }}b" -g "AzureBackupRG-cloudseis-${{ matrix.os }}-${{ matrix.julia-version }}-${{ github.run_id }}" -l southcentralus
      - uses: julia-actions/julia-buildpkg@master
      - uses: julia-actions/julia-runtest@master
        env:
          AZURE_CREDENTIALS: ${{ secrets.AZURE_CREDENTIALS }}
          STORAGE_ACCOUNT1: "c${{ steps.uuid.outputs.uuid }}a"
          STORAGE_ACCOUNT2: "c${{ steps.uuid.outputs.uuid }}b"
      - uses: julia-actions/julia-processcoverage@v1
      - uses: codecov/codecov-action@v1
        with:
          file: lcov.info
      - name: Run Az CLI script
        run: |
          az group delete -n "AzureBackupRG-cloudseis-${{ matrix.os }}-${{ matrix.julia-version }}-${{ github.run_id }}" --yes
        if: ${{ always() }}

