name: CI
on:
  push:
    branches: [master]
    tags: ["*"]
  pull_request:
jobs:
  test:
    name: Julia ${{ matrix.version }} - ${{ matrix.os }} - ${{ matrix.arch }} - ${{ github.event_name }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        version:
          - lts
          - 1 # automatically expands to the latest stable 1.x release of Julia
        os:
          - ubuntu-latest
        arch:
          - x64
    steps:
      - uses: actions/checkout@v2
      - uses: azure/login@v1
        with:
          creds: '{"clientId":"${{ secrets.CLIENT_ID }}","clientSecret":"${{ secrets.CLIENT_SECRET }}","subscriptionId":"${{ secrets.SUBSCRIPTION_ID }}","tenantId":"${{ secrets.TENANT_ID }}"}'
      - uses: julia-actions/setup-julia@v2
        with:
          version: ${{ matrix.version }}
          arch: ${{ matrix.arch }}
      - name: Generate UUID
        id: uuid
        run: julia -e 'using Random; write(stdout,"::set-output name=uuid::"*lowercase(randstring(20)))'
        shell: bash
      - name: Run Az CLI script
        run: |
          az group create -l southcentralus -n "AzureBackupRG-cloudseis-${{ matrix.os }}-${{ matrix.julia-version }}-${{ github.run_id }}"
          az storage account create -n "c${{ steps.uuid.outputs.uuid }}a" -g "AzureBackupRG-cloudseis-${{ matrix.os }}-${{ matrix.julia-version }}-${{ github.run_id }}" -l southcentralus --min-tls-version TLS1_2
          az storage account create -n "c${{ steps.uuid.outputs.uuid }}b" -g "AzureBackupRG-cloudseis-${{ matrix.os }}-${{ matrix.julia-version }}-${{ github.run_id }}" -l southcentralus --min-tls-version TLS1_2
      - uses: julia-actions/cache@v1
      - uses: julia-actions/julia-buildpkg@v1
      - uses: julia-actions/julia-runtest@v1
        env:
          CLIENT_ID: ${{ secrets.CLIENT_ID }}
          CLIENT_SECRET: ${{ secrets.CLIENT_SECRET }}
          TENANT_ID: ${{ secrets.TENANT_ID }}
          STORAGE_ACCOUNT1: "c${{ steps.uuid.outputs.uuid }}a"
          STORAGE_ACCOUNT2: "c${{ steps.uuid.outputs.uuid }}b"
      - uses: julia-actions/julia-processcoverage@v1
      - uses: codecov/codecov-action@v1
        with:
          file: lcov.info
      - name: Run Az CLI script
        run: |
          az group delete -n "AzureBackupRG-cloudseis-${{ matrix.os }}-${{ matrix.julia-version }}-${{ github.run_id }}" --yes
        if: ${{ always() }}

  docs:
    name: Documentation
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: julia-actions/setup-julia@v1
        with:
          version: '1'
      - run: |
          julia --project=docs -e '
            using Pkg
            Pkg.develop(PackageSpec(path=pwd()))
            Pkg.instantiate()'
      - run: julia --project=docs docs/make.jl
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          DOCUMENTER_KEY: ${{ secrets.DOCUMENTER_KEY }}